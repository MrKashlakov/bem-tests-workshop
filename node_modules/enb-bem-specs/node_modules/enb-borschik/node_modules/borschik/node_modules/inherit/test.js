var inherit = require('./index');
//
//// base "class"
//var A = inherit(/** @lends A.prototype */{
//    __constructor : function(property) { // constructor
//        this.property = property;
//    },
//
//    getProperty : function() {
//        return this.property + ' of instanceA';
//    },
//
//    getType : function() {
//        return 'A';
//    },
//
//    getStaticProperty : function() {
//        return this.__self.staticMember; // access to static
//    }
//}, /** @lends A */ {
//    staticProperty : 'staticA',
//
//    staticMethod : function() {
//        return this.staticProperty;
//    }
//});
//
//// inherited "class" from A
//var B = inherit(A, /** @lends B.prototype */{
//    getProperty : function() { // overriding
//        return this.property + ' of instanceB';
//    },
//
//    getType : function() { // overriding + "super" call
//        return this.__base() + 'B';
//    }
//}, /** @lends B */ {
//    staticMethod : function() { // static overriding + "super" call
//        return this.__base() + ' of staticB';
//    }
//});
//
//// mixin M
//var M = inherit({
//    getMixedProperty : function() {
//        return 'mixed property';
//    }
//});
//
//// inherited "class" from A with mixin M
//var C = inherit([A, M], {
//    getMixedProperty : function() {
//        return this.__base() + ' from C';
//    }
//});
//
//var instanceOfB = new B('property');
//
//instanceOfB.getProperty(); // returns 'property of instanceB'
//instanceOfB.getType(); // returns 'AB'
//B.staticMethod(); // returns 'staticA of staticB'
//
//var instanceOfC = new C();
//console.log(instanceOfC.getMixedProperty()); // returns "mixed property from C"

var A = function(arg) {
        console.log(arg);
    },
    B = inherit(A, {
        __constructor : function() {
            this.__base('a');
            console.log('b');
        }
    }),
    C = inherit(B, {}),
    D = inherit(C, {
        __constructor : function() {
            this.__base();
            console.log('d');
        }
    });

console.log(new D() instanceof A);
