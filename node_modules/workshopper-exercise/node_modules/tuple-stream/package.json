{
  "_args": [
    [
      "tuple-stream@0.0.2",
      "C:\\Users\\kashlakov\\Documents\\test\\bem-tests-workshop\\node_modules\\workshopper-exercise"
    ]
  ],
  "_from": "tuple-stream@0.0.2",
  "_id": "tuple-stream@0.0.2",
  "_inCache": true,
  "_installable": true,
  "_location": "/workshopper-exercise/tuple-stream",
  "_npmUser": {
    "email": "mail@substack.net",
    "name": "substack"
  },
  "_npmVersion": "1.1.71",
  "_phantomChildren": {},
  "_requested": {
    "name": "tuple-stream",
    "raw": "tuple-stream@0.0.2",
    "rawSpec": "0.0.2",
    "scope": null,
    "spec": "0.0.2",
    "type": "version"
  },
  "_requiredBy": [
    "/workshopper-exercise"
  ],
  "_resolved": "https://registry.npmjs.org/tuple-stream/-/tuple-stream-0.0.2.tgz",
  "_shasum": "f91f6fb1bafde1ebd797cf6003378ebc3870b933",
  "_shrinkwrap": null,
  "_spec": "tuple-stream@0.0.2",
  "_where": "C:\\Users\\kashlakov\\Documents\\test\\bem-tests-workshop\\node_modules\\workshopper-exercise",
  "author": {
    "email": "mail@substack.net",
    "name": "James Halliday",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/tuple-stream/issues"
  },
  "dependencies": {
    "through": "~2.3.4"
  },
  "description": "zip together two streams into a single stream with aligned pairwise data",
  "devDependencies": {
    "concat-stream": "~1.0.0",
    "split": "~0.2.5",
    "tape": "~1.0.4"
  },
  "directories": {},
  "dist": {
    "shasum": "f91f6fb1bafde1ebd797cf6003378ebc3870b933",
    "tarball": "http://registry.npmjs.org/tuple-stream/-/tuple-stream-0.0.2.tgz"
  },
  "homepage": "https://github.com/substack/tuple-stream",
  "keywords": [
    "pair",
    "pairwise",
    "zip",
    "stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "email": "mail@substack.net",
      "name": "substack"
    }
  ],
  "name": "tuple-stream",
  "optionalDependencies": {},
  "readme": "# tuple-stream\n\nzip together two streams into a single stream with aligned pairwise data\n\n[![browser support](https://ci.testling.com/substack/tuple-stream.png)](http://ci.testling.com/substack/tuple-stream)\n\n[![build status](https://secure.travis-ci.org/substack/tuple-stream.png)](http://travis-ci.org/substack/tuple-stream)\n\n# example\n\nThis is easy to understand with lines:\n\n``` js\nvar split = require('split');\nvar through = require('through');\nvar tuple = require('../');\n\nvar a = split(), b = split();\n\ntuple(a, b).pipe(through(function (pair) {\n    this.queue(pair[0] + ' | ' + pair[1] + '\\n');\n})).pipe(process.stdout);\n\na.end('one\\ntwo\\nhree\\n4\\nfive');\nb.end('one\\ntwo\\nthree\\nfour\\n');\n```\n\noutput:\n\n```\none | one\ntwo | two\nhree | three\n4 | four\nfive | \n```\n\nHere the `split` module chunks up its input by newlines, sending a separate\nchunk for each line. The `tuple` module kicks in and aligns the events by order\nsuch that the first event from `a` is paired with the first event from `b` and\nso on.\n\n# methods\n\n\n``` js\nvar tuple = require('tuple-stream')\n```\n\n## tuple(a, b)\n\nReturn a readable stream that zips together the data from readable streams `a`\nand `b` into an array data chunk with `[achunk,bchunk]`.\n\nWhen a stream is finished but its partner isn't, it will emit `null` data.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install tuple-stream\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/tuple-stream.git"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "testling": {
    "browsers": {
      "chrome": [
        10,
        22
      ],
      "ff": [
        3.5,
        10,
        15
      ],
      "ie": [
        6,
        7,
        8,
        9
      ],
      "opera": [
        12
      ],
      "safari": [
        5.1
      ]
    },
    "files": "test/*.js"
  },
  "version": "0.0.2"
}
